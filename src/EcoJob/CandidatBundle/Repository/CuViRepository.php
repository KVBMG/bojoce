<?php

namespace EcoJob\CandidatBundle\Repository;

/**
 * CuViRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CuViRepository extends \Doctrine\ORM\EntityRepository
{
    public function search($keyswords, $contrat, $exp, $offset, $limit) {

        $qb = $this->createQueryBuilder('o');
        $qb->where('o.valid = true')
                ->andWhere('o.suspendu = false')
                ->orderBy('o.createdAt', 'DESC')
                ->setFirstResult($offset)
                ->setMaxResults($limit);
        if (!empty($keyswords)) {
            $tab = explode(" ", $keyswords);
            if (count($tab) > 1) {
                $qb->andWhere("LOWER(o.contenu) LIKE :query OR LOWER(o.titre) LIKE :query OR REGEXP(LOWER(o.localisation), :query) = true")
                        ->setParameter("query", "$tab[0]");

                for ($i = 1; $i < count($tab); $i++) {
                    if (!empty($tab[$i])) {
                        $tab[$i] = strtolower($tab[$i]);
                        $qb->andWhere("LOWER(o.contenu) LIKE :regexp$i OR LOWER(o.titre) LIKE :regexp$i OR REGEXP(LOWER(o.localisation), :regexp$i) = true")
                                ->setParameter("regexp$i", "% $tab[$i] %");
                    }
                }
            } else {
                $keyswords = strtolower($keyswords);
                $qb->andWhere('REGEXP(LOWER(o.titre), :query) = true OR REGEXP(LOWER(o.contenu), :query) = true OR REGEXP(LOWER(o.localisation), :query) = true')
                        ->setParameter("query", "$keyswords");
            }
        }
        if ($exp != 0) {
            $qb->andWhere('o.experience = :exp')
                    ->setParameter('exp', $exp);
        }
        if ($contrat != 0) {
            $qb->andWhere('o.contrat = :contrat')
                    ->setParameter('contrat', $contrat);
        }
        return $qb->getQuery()->getResult();
    }    
}
